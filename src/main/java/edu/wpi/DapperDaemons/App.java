package edu.wpi.DapperDaemons;

import edu.wpi.DapperDaemons.backend.AutoSave;
import edu.wpi.DapperDaemons.backend.connectionHandler;
import edu.wpi.DapperDaemons.backend.loadingScreen.LoadingScreen;
import java.io.IOException;
import java.io.InputStream;
import java.util.Objects;
import java.util.Properties;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.image.Image;
import javafx.stage.Stage;
import lombok.extern.slf4j.Slf4j;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Slf4j
public class App extends Application {
  private static final String brighamIMG =
      "file:src/main/resources/edu/wpi/DapperDaemons/assets/Brigham-Blurred.jpg";
  // Do not edit this file when implementing your UI design

  public static Logger LOG;

  @Override
  public void init() {
    createLogger();
    log.info("Starting Up");
  }

  @Override
  public void start(Stage primaryStage) throws IOException {
    // Setup app icons
    primaryStage
        .getIcons()
        .add(
            new Image(
                String.valueOf(
                    App.class.getResource("assets/" + "Brigham_and_Womens_Hospital_logo.png"))));
    primaryStage.setTitle("BWH");

    // Load app
    LoadingScreen ls = new LoadingScreen(primaryStage);
    ls.display(
        () -> {
          connectionHandler.init();
          connectionHandler.switchToClientServer();
          AutoSave.start(10);
        },
        () -> {
          Parent root = null;
          try {
            root =
                FXMLLoader.load(Objects.requireNonNull(getClass().getResource("views/login.fxml")));
          } catch (IOException e) {
            e.printStackTrace();
          }
          Scene scene = new Scene(root);
          primaryStage.setMinWidth(635);
          primaryStage.setMinHeight(510);
          primaryStage.setScene(scene);
          primaryStage.show();
        });
  }

  private void createLogger() {
    try {
      Properties properties = new Properties();
      InputStream propFile =
          getClass().getClassLoader().getResourceAsStream("simplelogger.properties");
      properties.load(propFile);
    } catch (IOException e) {
      e.printStackTrace();
    }

    LOG = LoggerFactory.getLogger(App.class);
    LOG.info("TESTING LOG FILE");
  }

  @Override
  public void stop() {
    log.info("Shutting Down");
  }
}
